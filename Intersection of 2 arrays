//Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order.
# Intuition
<!-- Describe your first thoughts on how to solve this problem. -->

# Approach
<!-- Describe your approach to solving the problem. -->

# Complexity
- Time complexity:
<!-- Add your time complexity here, e.g. $$O(n)$$ -->

- Space complexity:
<!-- Add your space complexity here, e.g. $$O(n)$$ -->

# Code
```
function intersect(nums1, nums2) {
    // Count occurrences of each number in nums1
    let count1 = {};
    for (let num of nums1) {
        count1[num] = (count1[num] || 0) + 1;
    }

    // Find the intersection
    let result = [];
    for (let num of nums2) {
        if (count1[num] > 0) {
            result.push(num);
            count1[num]--;
        }
    }

    return result;
}

// Example usage
let nums1 = [1, 2, 2, 1];
let nums2 = [2, 2];
console.log(intersect(nums1, nums2));

```
